<?php
declare(strict_types=1);

/**
 * @file
 * Hooks and core integration for the file_adoption module.
 */

/**
 * Implements hook_cron().
 */
function file_adoption_cron(): void {
  $config = \Drupal::config('file_adoption.settings');
  $state = \Drupal::state();
  $frequency = $config->get('cron_frequency') ?: 'yearly';
  $intervals = [
    'every' => 0,
    'hourly' => 3600,
    'daily' => 86400,
    'weekly' => 604800,
    'monthly' => 2592000,
    'yearly' => 31536000,
  ];
  $last = (int) $state->get('file_adoption.last_cron', 0);
  $now = time();
  $interval = $intervals[$frequency] ?? 31536000;
  if ($last && ($now - $last) < $interval) {
    return;
  }
  $state->set('file_adoption.last_cron', $now);
  /** @var \Drupal\file_adoption\FileScanner $scanner */
  $scanner = \Drupal::service('file_adoption.file_scanner');
  $limit = (int) $config->get('items_per_run');

  if ($config->get('enable_adoption')) {
    $results = $scanner->scanAndProcess(TRUE, $limit);
  }
  else {
    $results = $scanner->recordOrphans($limit);
  }

  // Refresh the full file index.
  $scanner->buildIndex();

  $state->set('file_adoption.last_results', $results);
}

/**
 * Implements hook_entity_insert().
 */
function file_adoption_entity_insert(\Drupal\Core\Entity\EntityInterface $entity): void {
  if ($entity->getEntityTypeId() !== 'file') {
    return;
  }
  $uri = $entity->getFileUri();
  if (str_starts_with($uri, 'public://')) {
    $uri = 'public://' . ltrim(substr($uri, 9), '/');
  }
  /** @var \Drupal\file_adoption\FileScanner $scanner */
  $scanner = \Drupal::service('file_adoption.file_scanner');
  $patterns = $scanner->getIgnorePatterns();
  $relative = str_starts_with($uri, 'public://') ? substr($uri, 9) : $uri;
  $ignored = FALSE;
  foreach ($patterns as $pattern) {
    if ($pattern !== '' && fnmatch($pattern, $relative)) {
      $ignored = TRUE;
      break;
    }
  }
  \Drupal::database()->merge('file_adoption_index')
    ->key('uri', $uri)
    ->fields([
      'uri' => $uri,
      'timestamp' => time(),
      'ignored' => $ignored ? 1 : 0,
    ])
    ->execute();
}

/**
 * Implements hook_entity_delete().
 */
function file_adoption_entity_delete(\Drupal\Core\Entity\EntityInterface $entity): void {
  if ($entity->getEntityTypeId() !== 'file') {
    return;
  }
  $uri = $entity->getFileUri();
  if (str_starts_with($uri, 'public://')) {
    $uri = 'public://' . ltrim(substr($uri, 9), '/');
  }
  \Drupal::database()->delete('file_adoption_index')
    ->condition('uri', $uri)
    ->execute();
}
