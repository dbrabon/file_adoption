<?php
declare(strict_types=1);

/**
 * Implements hook_schema().
 */
function file_adoption_schema(): array {
  $schema['file_adoption_index'] = [
    'description' => 'All files discovered under public:// during scans.',
    'fields' => [
      'id' => [
        'description' => 'Primary identifier.',
        'type'        => 'serial',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ],
      'uri' => [
        'description' => 'Canonical public:// URI of the file.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
      ],
      'timestamp' => [
        'description' => 'UNIX time the file was (re‑)indexed.',
        'type'        => 'int',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
        'default'     => 0,
      ],
      'is_ignored' => [
        'description' => '1 ⇢ file matches an ignore pattern.',
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
        'default'     => 0,
      ],
      'is_managed' => [
        'description' => '1 ⇢ file exists in file_managed.',
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
        'default'     => 0,
      ],
      'directory_depth' => [
        'description' => 'Number of parent directories in the URI.',
        'type'        => 'int',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
        'default'     => 0,
      ],
    ],
    'primary key' => ['id'],
    'unique keys' => [
      'uri' => ['uri'],
    ],
    'indexes' => [
      'timestamp'       => ['timestamp'],
      'is_managed'      => ['is_managed'],
      'is_ignored'      => ['is_ignored'],
      'directory_depth' => ['directory_depth'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function file_adoption_uninstall(): void {
  $db = \Drupal::database();
  if ($db->schema()->tableExists('file_adoption_index')) {
    $db->schema()->dropTable('file_adoption_index');
  }
  \Drupal::configFactory()->getEditable('file_adoption.settings')->delete();

  $state = \Drupal::state();
  foreach (['file_adoption.last_full_scan', 'file_adoption.last_cron'] as $key) {
    $state->delete($key);
  }
}

/**
 * Update 10012 – drop orphan table, rename legacy columns, add directory_depth.
 */
function file_adoption_update_10012(): string {
  $db     = \Drupal::database();
  $schema = $db->schema();

  // Create the index table if it is missing. This can happen if the module was
  // installed fresh after the update hook was introduced but before updates
  // were run. Using the module schema ensures the table matches the current
  // structure and prevents errors when altering non-existent tables.
  if (!$schema->tableExists('file_adoption_index')) {
    $schema->createTable('file_adoption_index', file_adoption_schema()['file_adoption_index']);
  }

  // 1 – drop the obsolete orphan table if it still exists.
  if ($schema->tableExists('file_adoption_orphans')) {
    $schema->dropTable('file_adoption_orphans');
  }

  // 2 – rename legacy columns ‘ignored’ → ‘is_ignored’, ‘managed’ → ‘is_managed’.
  $spec = [
    'type'     => 'int',
    'size'     => 'tiny',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default'  => 0,
  ];
  if ($schema->fieldExists('file_adoption_index', 'ignored')
      && !$schema->fieldExists('file_adoption_index', 'is_ignored')) {
    $schema->changeField('file_adoption_index', 'ignored', 'is_ignored', $spec);
  }
  if ($schema->fieldExists('file_adoption_index', 'managed')
      && !$schema->fieldExists('file_adoption_index', 'is_managed')) {
    $schema->changeField('file_adoption_index', 'managed', 'is_managed', $spec);
  }

  // 3 – add directory_depth if it is missing.
  if (!$schema->fieldExists('file_adoption_index', 'directory_depth')) {
    $schema->addField('file_adoption_index', 'directory_depth', [
      'type'        => 'int',
      'unsigned'    => TRUE,
      'not null'    => TRUE,
      'default'     => 0,
      'description' => 'Number of parent directories in the URI.',
    ]);
  }

  return (string) t('Legacy columns renamed and directory_depth added.');
}

/**
 * Update 10013 – seed default ignore patterns if none are set.
 */
function file_adoption_update_10013(): string {
  $defaults = "css/.*\njs/.*\nprivate/.*\nwebforms/.*\nconfig_.*\nmedia-icons/.*\nphp/.*\nstyles/.*\nasset_injector/.*\nembed_buttons/.*\noembed_thumbnails/.*";

  $config = \Drupal::configFactory()->getEditable('file_adoption.settings');
  $current = trim((string) $config->get('ignore_patterns'));

  if ($current === '') {
    $config->set('ignore_patterns', $defaults)->save();
    return (string) t('Default ignore patterns added to configuration.');
  }
  return (string) t('Existing ignore patterns left unchanged.');
}

